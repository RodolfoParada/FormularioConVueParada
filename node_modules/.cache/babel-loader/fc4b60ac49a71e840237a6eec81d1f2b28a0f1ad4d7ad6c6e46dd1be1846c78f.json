{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    formstate: {},\n    nombre: \"\",\n    apellido: \"\",\n    correo: \"\",\n    clave: \"\",\n    curso: [],\n    error: false\n  },\n  mutations: {\n    setFormState(state, formstate) {\n      state.formstate = formstate;\n    },\n    setNombre(state, nombre) {\n      state.nombre = nombre;\n    },\n    setApellido(state, apellido) {\n      state.apellido = apellido;\n    },\n    setCorreo(state, correo) {\n      state.correo = correo;\n    },\n    setClave(state, clave) {\n      state.clave = clave;\n    },\n    setCurso(state, curso) {\n      state.curso = curso;\n    },\n    setError(state, error) {\n      state.error = error;\n    },\n    resetCampos(state) {\n      state.nombre = \"\";\n      state.apellido = \"\";\n      state.correo = \"\";\n      state.clave = \"\";\n      state.curso = [];\n    }\n  },\n  actions: {\n    enviarDatos({\n      state,\n      commit\n    }) {\n      if (!state.nombre || !state.apellido || !state.correo || !state.clave || state.curso.length === 0) {\n        // Al menos uno de los campos requeridos está vacío\n        // Puedes mostrar un mensaje de error o realizar alguna acción aquí\n        commit(\"setError\", \"Este campo es obligatorio\");\n        return;\n      }\n      const datos = {\n        nombre: state.nombre,\n        apellido: state.apellido,\n        correo: state.correo,\n        clave: state.clave,\n        curso: state.curso\n      };\n\n      // Aquí puedes hacer lo que necesites con los datos, por ejemplo, enviarlos a través de una API\n\n      commit(\"setError\", false);\n      commit(\"resetCampos\");\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","formstate","nombre","apellido","correo","clave","curso","error","mutations","setFormState","setNombre","setApellido","setCorreo","setClave","setCurso","setError","resetCampos","actions","enviarDatos","commit","length","datos"],"sources":["/home/rodolfo/Descargas/FormularioConVueParada/src/state/estado.js"],"sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\n\n\nexport default new Vuex.Store({\n    state: {\n        formstate: {},\n        nombre: \"\",\n        apellido: \"\",\n        correo: \"\",\n        clave: \"\",\n        curso: [],\n        error: false,\n    },\n    mutations: {\n        setFormState(state, formstate) {\n            state.formstate = formstate;\n        },\n        setNombre(state, nombre) {\n            state.nombre = nombre;\n        },\n        setApellido(state, apellido) {\n            state.apellido = apellido;\n        },\n        setCorreo(state, correo) {\n            state.correo = correo;\n        },\n        setClave(state, clave) {\n            state.clave = clave;\n        },\n        setCurso(state, curso) {\n            state.curso = curso;\n        },\n        setError(state, error) {\n            state.error = error;\n        },\n        resetCampos(state) {\n            state.nombre = \"\";\n            state.apellido = \"\";\n            state.correo = \"\";\n            state.clave = \"\";\n            state.curso = [];\n        },\n    },\n    actions: {\n        enviarDatos({\n            state,\n            commit\n        }) {\n            if (\n                !state.nombre ||\n                !state.apellido ||\n                !state.correo ||\n                !state.clave ||\n                state.curso.length === 0\n            ) {\n                // Al menos uno de los campos requeridos está vacío\n                // Puedes mostrar un mensaje de error o realizar alguna acción aquí\n                commit(\"setError\", \"Este campo es obligatorio\");\n                return;\n            }\n\n            const datos = {\n                nombre: state.nombre,\n                apellido: state.apellido,\n                correo: state.correo,\n                clave: state.clave,\n                curso: state.curso,\n            };\n\n            // Aquí puedes hacer lo que necesites con los datos, por ejemplo, enviarlos a través de una API\n\n            commit(\"setError\", false);\n            commit(\"resetCampos\");\n        },\n    },\n});"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAIb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC1BC,KAAK,EAAE;IACHC,SAAS,EAAE,CAAC,CAAC;IACbC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACPC,YAAYA,CAACT,KAAK,EAAEC,SAAS,EAAE;MAC3BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC/B,CAAC;IACDS,SAASA,CAACV,KAAK,EAAEE,MAAM,EAAE;MACrBF,KAAK,CAACE,MAAM,GAAGA,MAAM;IACzB,CAAC;IACDS,WAAWA,CAACX,KAAK,EAAEG,QAAQ,EAAE;MACzBH,KAAK,CAACG,QAAQ,GAAGA,QAAQ;IAC7B,CAAC;IACDS,SAASA,CAACZ,KAAK,EAAEI,MAAM,EAAE;MACrBJ,KAAK,CAACI,MAAM,GAAGA,MAAM;IACzB,CAAC;IACDS,QAAQA,CAACb,KAAK,EAAEK,KAAK,EAAE;MACnBL,KAAK,CAACK,KAAK,GAAGA,KAAK;IACvB,CAAC;IACDS,QAAQA,CAACd,KAAK,EAAEM,KAAK,EAAE;MACnBN,KAAK,CAACM,KAAK,GAAGA,KAAK;IACvB,CAAC;IACDS,QAAQA,CAACf,KAAK,EAAEO,KAAK,EAAE;MACnBP,KAAK,CAACO,KAAK,GAAGA,KAAK;IACvB,CAAC;IACDS,WAAWA,CAAChB,KAAK,EAAE;MACfA,KAAK,CAACE,MAAM,GAAG,EAAE;MACjBF,KAAK,CAACG,QAAQ,GAAG,EAAE;MACnBH,KAAK,CAACI,MAAM,GAAG,EAAE;MACjBJ,KAAK,CAACK,KAAK,GAAG,EAAE;MAChBL,KAAK,CAACM,KAAK,GAAG,EAAE;IACpB;EACJ,CAAC;EACDW,OAAO,EAAE;IACLC,WAAWA,CAAC;MACRlB,KAAK;MACLmB;IACJ,CAAC,EAAE;MACC,IACI,CAACnB,KAAK,CAACE,MAAM,IACb,CAACF,KAAK,CAACG,QAAQ,IACf,CAACH,KAAK,CAACI,MAAM,IACb,CAACJ,KAAK,CAACK,KAAK,IACZL,KAAK,CAACM,KAAK,CAACc,MAAM,KAAK,CAAC,EAC1B;QACE;QACA;QACAD,MAAM,CAAC,UAAU,EAAE,2BAA2B,CAAC;QAC/C;MACJ;MAEA,MAAME,KAAK,GAAG;QACVnB,MAAM,EAAEF,KAAK,CAACE,MAAM;QACpBC,QAAQ,EAAEH,KAAK,CAACG,QAAQ;QACxBC,MAAM,EAAEJ,KAAK,CAACI,MAAM;QACpBC,KAAK,EAAEL,KAAK,CAACK,KAAK;QAClBC,KAAK,EAAEN,KAAK,CAACM;MACjB,CAAC;;MAED;;MAEAa,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC;MACzBA,MAAM,CAAC,aAAa,CAAC;IACzB;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}